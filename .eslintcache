[{"/home/linux/github/stripe-widget-shop/src/index.js":"1","/home/linux/github/stripe-widget-shop/src/pages/App/App.jsx":"2","/home/linux/github/stripe-widget-shop/src/utilities/users-service.js":"3","/home/linux/github/stripe-widget-shop/src/pages/AboutUsPage/AboutUsPage.jsx":"4","/home/linux/github/stripe-widget-shop/src/pages/HomePage/HomePage.jsx":"5","/home/linux/github/stripe-widget-shop/src/pages/OrderHistoryPage/OrderHistoryPage.jsx":"6","/home/linux/github/stripe-widget-shop/src/pages/AuthPage/AuthPage.jsx":"7","/home/linux/github/stripe-widget-shop/src/pages/NewOrderPage/NewOrderPage.jsx":"8","/home/linux/github/stripe-widget-shop/src/components/MenuAppBar/MenuAppBar.jsx":"9","/home/linux/github/stripe-widget-shop/src/pages/AboutUsPage/styles.js":"10","/home/linux/github/stripe-widget-shop/src/utilities/users-api.js":"11","/home/linux/github/stripe-widget-shop/src/pages/HomePage/styles.js":"12","/home/linux/github/stripe-widget-shop/src/components/LoginForm/LoginForm.jsx":"13","/home/linux/github/stripe-widget-shop/src/components/SignUpForm/SignUpForm.jsx":"14","/home/linux/github/stripe-widget-shop/src/components/CartDrawer/CartDrawer.jsx":"15","/home/linux/github/stripe-widget-shop/src/components/NavDrawer/NavDrawer.jsx":"16","/home/linux/github/stripe-widget-shop/src/utilities/send-request.js":"17","/home/linux/github/stripe-widget-shop/src/theme.js":"18"},{"size":381,"mtime":1616100240910,"results":"19","hashOfConfig":"20"},{"size":1484,"mtime":1616115087910,"results":"21","hashOfConfig":"20"},{"size":1245,"mtime":1616100240910,"results":"22","hashOfConfig":"20"},{"size":206,"mtime":1616100240910,"results":"23","hashOfConfig":"20"},{"size":280,"mtime":1616100240910,"results":"24","hashOfConfig":"20"},{"size":359,"mtime":1616100240910,"results":"25","hashOfConfig":"20"},{"size":1038,"mtime":1616110136690,"results":"26","hashOfConfig":"20"},{"size":657,"mtime":1616100240910,"results":"27","hashOfConfig":"20"},{"size":5617,"mtime":1616100240910,"results":"28","hashOfConfig":"20"},{"size":0,"mtime":1616100240910,"results":"29","hashOfConfig":"20"},{"size":412,"mtime":1616100240910,"results":"30","hashOfConfig":"20"},{"size":0,"mtime":1616100240910,"results":"31","hashOfConfig":"20"},{"size":2141,"mtime":1616108768390,"results":"32","hashOfConfig":"20"},{"size":2132,"mtime":1616111773120,"results":"33","hashOfConfig":"20"},{"size":2178,"mtime":1616100240910,"results":"34","hashOfConfig":"20"},{"size":2052,"mtime":1616100240910,"results":"35","hashOfConfig":"20"},{"size":910,"mtime":1616100240910,"results":"36","hashOfConfig":"20"},{"size":1078,"mtime":1616115052640,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8kz81v",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/linux/github/stripe-widget-shop/src/index.js",[],["83","84"],"/home/linux/github/stripe-widget-shop/src/pages/App/App.jsx",[],"/home/linux/github/stripe-widget-shop/src/utilities/users-service.js",[],"/home/linux/github/stripe-widget-shop/src/pages/AboutUsPage/AboutUsPage.jsx",["85","86","87"],"import { Typography, Container} from '@material-ui/core'\nimport useStyle from './styles.js'\n\nexport default function AboutUsPage() {\n    return (\n        <>\n            <h1>About Us</h1>\n        </>\n    )\n}","/home/linux/github/stripe-widget-shop/src/pages/HomePage/HomePage.jsx",["88","89","90","91","92"],"import { Container, Typography, Button } from '@material-ui/core';\nimport CreditCard from '@material-ui/icons/CreditCard';\nimport useStyle from './styles';\n\nexport default function HomePage() {\n    \n    \n\n    return (\n        <>\n            <h1>HomePage</h1>\n        </>\n    );\n};","/home/linux/github/stripe-widget-shop/src/pages/OrderHistoryPage/OrderHistoryPage.jsx",["93"],"import * as usersService from '../../utilities/users-service';\n\nexport default function OrderHistoryPage() {\n\n  // async function handleCheckToken() {\n  //   const expDate = await usersService.checkToken();\n  //   console.log(expDate);\n  // }\n\n  return (\n    <>\n      <h1>OrderHistoryPage</h1>\n      <button>Check When My Login Expires</button>\n    </>\n  );\n}","/home/linux/github/stripe-widget-shop/src/pages/AuthPage/AuthPage.jsx",[],"/home/linux/github/stripe-widget-shop/src/pages/NewOrderPage/NewOrderPage.jsx",["94","95","96","97"],"import Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Grid, GridList } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => {\n\n})\n\n\n\nexport default function NewOrderPage() {\n  const theme = useTheme();\n\n  console.log(theme.palette.secondary.main)\n\n  return (\n  <AppBar position=\"static\">\n    <Tabs\n    >\n      <Tab label=\"Green Widgets\" />\n      <Tab label=\"Red Widgets\" />\n      <Tab label=\"Blue Widgets\" /> \n    </Tabs>\n  </AppBar>\n  );\n};","/home/linux/github/stripe-widget-shop/src/components/MenuAppBar/MenuAppBar.jsx",["98","99"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport ShoppingCart from '@material-ui/icons/ShoppingCart'\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport NavDrawer from '../../components/NavDrawer/NavDrawer';\nimport * as userService from '../../utilities/users-service'\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport cartDrawer from '../CartDrawer/CartDrawer';\nimport CartDrawer from \"../CartDrawer/CartDrawer\";\n\nconst useStyles = makeStyles((theme) => ({\n    body: {\n        margin: 0,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n    welcome: {\n        margin: 'auto',\n        marginRight: theme.spacing(2)\n    },\n    sectionDesktop: {\n        display:'none',\n        [theme.breakpoints.up('md')] : {\n            display:'flex',\n        }\n    },\n    sectionMobile: {\n        display:'flex',\n        [theme.breakpoints.up('md')] : {\n            display:'none',\n        }\n    },\n}));\n\nexport default function MenuAppBar({user, setUser}) {\n\n    const classes= useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n    \n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    function handleLogOut() {\n        userService.logOut();\n        setUser(null);\n    }\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    }\n    \n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    }\n\n    const menuId = 'primary-search-account-menu'\n    const renderMenu = (\n    <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n        id={menuId}\n        keepMounted\n        transformOrigin={{ vertical: 'top', hoerizontal: 'right'}}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n    >\n        <MenuItem onClick={handleMenuClose}>My Account</MenuItem>\n        <MenuItem onClick={handleLogOut}>Sign Out</MenuItem>\n    </Menu>\n    );\n\n    const mobileMenuId='primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n                <MenuItem onClick={handleMenuClose}>\n                    My Account\n                </MenuItem>\n                <MenuItem>\n                    Shopping Cart\n                </MenuItem>\n                <MenuItem onClick={handleLogOut}>\n                    Sign Out\n                </MenuItem>\n        </Menu>\n    )\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <NavDrawer />\n                    </IconButton>\n                    <Typography varient=\"h6\" className={classes.title}>\n                        StripeWidgetShop\n                    </Typography>\n                    <div className={classes.sectionDesktop}>\n                        <Typography varient=\"h6\" className={classes.welcome}>\n                            Welcome, {user.name}\n                        </Typography>\n                        <IconButton\n                            className={classes.menuButton}\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                        <IconButton\n                            edge=\"start\"\n                            aria-label=\"shopping cart of current user\"\n                            color=\"inherit\"\n                        >   \n                            <CartDrawer />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            className={classes.MenuButton}\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","/home/linux/github/stripe-widget-shop/src/pages/AboutUsPage/styles.js",[],"/home/linux/github/stripe-widget-shop/src/utilities/users-api.js",[],"/home/linux/github/stripe-widget-shop/src/pages/HomePage/styles.js",[],"/home/linux/github/stripe-widget-shop/src/components/LoginForm/LoginForm.jsx",["100","101"],"import { useState } from \"react\";\nimport { Box, Button, Container, Input } from \"@material-ui/core\";\nimport * as usersService from \"../../utilities/users-service\";\nimport \"./LoginForm.css\";\n\nexport default function LogIn({ setUser }) {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [error, setError] = useState(\"\");\n\n  function handleChange(evt) {\n    setCredentials({ ...credentials, [evt.target.name]: evt.target.value });\n    setError(\"\");\n  }\n\n  async function handleSubmit(evt) {\n    // Prevent form from being submitted to the server\n    evt.preventDefault();\n    try {\n      // The promise returned by the signUp service method\n      // will resolve to the user object included in the\n      // payload of the JSON Web Token (JWT)\n      const user = await usersService.login(credentials);\n      setUser(user);\n    } catch {\n      setError(\"Log In Failed - Try Again\");\n    }\n  }\n\n  return (\n    <form className=\"LoginForm\" onSubmit={handleSubmit}>\n      <Input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        required={true}\n        autoFocus={true}\n        fullWidth={true}\n        value={credentials.email}\n        onChange={handleChange}\n      />\n      <Input\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Password\"\n        required={true}\n        fullWidth={true}\n        value={credentials.password}\n        onChange={handleChange}\n      />\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Button type=\"submit\" size=\"large\" id=\"login\">\n          LOG IN\n        </Button>\n        <p className=\"error-message\">&nbsp;{error}</p>\n      </Box>\n    </form>\n  );\n}\n\n{\n  /* <div className=\"form-container\" onSubmit={handleSubmit}>\n  <form autoComplete=\"off\" >\n  <label>Email</label>\n    <input type=\"text\" name=\"email\" value={credentials.email} onChange={handleChange} required />\n    <label>Password</label>\n    <input type=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} required />\n    <button type=\"submit\">LOG IN</button>\n  </form>\n</div> */\n}\n","/home/linux/github/stripe-widget-shop/src/components/SignUpForm/SignUpForm.jsx",[],"/home/linux/github/stripe-widget-shop/src/components/CartDrawer/CartDrawer.jsx",["102","103","104","105","106"],"import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport HomeIcon from \"@material-ui/icons/HomeRounded\"\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport { Link } from 'react-router-dom'\nimport { Typography } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        }\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginRight:drawerWidth,\n        }\n    }\n}));\n\n\nexport default function CartDrawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n        setState(!state);\n    };\n\n    return (\n            <React.Fragment>\n                <ShoppingCartIcon onClick={toggleDrawer(true)} onClose={toggleDrawer(false)}/>\n                <Drawer anchor='right' open={state} onClose={toggleDrawer(false)}>\n                    <div className={classes.list} onClick={toggleDrawer(false)}>\n                        <List>\n                            <ListItem>\n                                <Typography varient=\"h1\" className=\"center\">\n                                    Shopping Cart\n                                </Typography>\n                            </ListItem>\n                                <Divider />\n                        </List>\n                    </div>\n                </Drawer>\n            </React.Fragment>\n        );\n};","/home/linux/github/stripe-widget-shop/src/components/NavDrawer/NavDrawer.jsx",["107"],"import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/HomeRounded\"\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport { Link } from 'react-router-dom'\n\n\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\n\nexport default function NavDrawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n        setState(!state);\n    };\n\n    return (\n        <React.Fragment>\n            <MenuIcon onClick={toggleDrawer(true)} onClose={toggleDrawer(false)}/>\n            <Drawer open={state} onClose={toggleDrawer(false)}>\n                <div className={classes.list} role='presentation' onClick={toggleDrawer(false)}>\n                    <List>\n                            <ListItem component={Link} to=\"/homepage\" button key={'home'}>\n                                <ListItemIcon><HomeIcon /></ListItemIcon>\n                                <ListItemText primary={'Home'} />\n                            </ListItem>\n                            <Divider />\n                            <ListItem component={Link} to=\"/orders/new\" button key={'New Order Page'}>\n                                <ListItemIcon><HomeIcon /></ListItemIcon>\n                                <ListItemText primary={'New Order Page'} />\n                            </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        </React.Fragment>\n    );\n};","/home/linux/github/stripe-widget-shop/src/utilities/send-request.js",[],"/home/linux/github/stripe-widget-shop/src/theme.js",["108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":20},{"ruleId":"113","severity":1,"message":"117","line":1,"column":22,"nodeType":"115","messageId":"116","endLine":1,"endColumn":31},{"ruleId":"113","severity":1,"message":"118","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":1,"column":21,"nodeType":"115","messageId":"116","endLine":1,"endColumn":31},{"ruleId":"113","severity":1,"message":"119","line":1,"column":33,"nodeType":"115","messageId":"116","endLine":1,"endColumn":39},{"ruleId":"113","severity":1,"message":"120","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"118","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"121","line":1,"column":13,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"122","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"123","line":3,"column":16,"nodeType":"115","messageId":"116","endLine":3,"endColumn":24},{"ruleId":"113","severity":1,"message":"117","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":17},{"ruleId":"113","severity":1,"message":"124","line":8,"column":7,"nodeType":"115","messageId":"116","endLine":8,"endColumn":16},{"ruleId":"113","severity":1,"message":"125","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":20},{"ruleId":"113","severity":1,"message":"126","line":14,"column":8,"nodeType":"115","messageId":"116","endLine":14,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":2,"column":23,"nodeType":"115","messageId":"116","endLine":2,"endColumn":32},{"ruleId":"127","severity":1,"message":"128","line":65,"column":1,"nodeType":"129","messageId":"130","endLine":75,"endColumn":2},{"ruleId":"113","severity":1,"message":"131","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":20},{"ruleId":"113","severity":1,"message":"132","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":20},{"ruleId":"113","severity":1,"message":"133","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":16},{"ruleId":"113","severity":1,"message":"134","line":8,"column":17,"nodeType":"115","messageId":"116","endLine":8,"endColumn":26},{"ruleId":"113","severity":1,"message":"135","line":11,"column":10,"nodeType":"115","messageId":"116","endLine":11,"endColumn":14},{"ruleId":"113","severity":1,"message":"134","line":8,"column":17,"nodeType":"115","messageId":"116","endLine":8,"endColumn":26},{"ruleId":"113","severity":1,"message":"136","line":1,"column":26,"nodeType":"115","messageId":"116","endLine":1,"endColumn":45},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'useStyle' is defined but never used.","'Button' is defined but never used.","'CreditCard' is defined but never used.","'usersService' is defined but never used.","'Grid' is defined but never used.","'GridList' is defined but never used.","'useStyles' is assigned a value but never used.","'ShoppingCart' is defined but never used.","'cartDrawer' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'HomeIcon' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'responsiveFontSizes' is defined but never used.","no-global-assign","no-unsafe-negation"]